/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    behaviors {
        as: autoshift {
            compatible = "zmk,behavior-hold-tap";
            label = "AUTOSHIFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "tap-preferred";
        };

        hml: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LEFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <110>;
            flavor = "balanced";
            hold-trigger-key-positions = <30 18 8 7 32 21 23 44 43 45 41 42 31 19 6 20 9 33 34 22 10 11 35 39 36 40>;
            hold-trigger-on-release;
        };

        hmr: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_RIGHT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <110>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <26 13 24 1 0 12 3 4 2 5 14 15 29 17 16 25 38 37 27 28 39 40 45 36 41 42>;
        };

        mol: mo_left {
            compatible = "zmk,behavior-hold-tap";
            label = "MO_LEFT";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <110>;
            flavor = "balanced";
            hold-trigger-key-positions = <19 21 41 45 42 30 31 43 32 33 44 34 35 23 22 10 11 9 8 20 7 6 18>;
            hold-trigger-on-release;
        };

        mor: mo_right {
            compatible = "zmk,behavior-hold-tap";
            label = "MO_RIGHT";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <110>;
            flavor = "balanced";
            hold-trigger-key-positions = <26 13 24 1 0 12 3 4 2 5 14 15 29 17 16 25 38 37 27 28 39 40 36>;
            hold-trigger-on-release;
        };
    };

    macros {
        tap2_macro: tap2_macro {
            compatible = "zmk,behavior-macro-two-param";
            #binding-cells = <2>;
            bindings =
                <&macro_param_1to1>,
                <&macro_tap>,
                <&kp MACRO_PLACEHOLDER &macro_param_2to1>,
                <&macro_tap>,
                <&kp MACRO_PLACEHOLDER>;

            label = "TAP2_MACRO";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Qwer-Mac {
            bindings = <
&kp TAB           &kp Q          &kp W            &kp E              &kp R               &kp T         &kp Y     &kp U                           &kp I                &kp O                 &kp P               &none
&kp LEFT_CONTROL  &kp A          &hml LEFT_GUI S  &hml LEFT_SHIFT D  &kp F               &kp G         &kp H     &kp J                           &hmr RIGHT_SHIFT K   &hmr RIGHT_GUI L      &as COLON SEMI      &kp RIGHT_CONTROL
&kp CAPSLOCK      &kp Z          &kp X            &kp C              &kp V               &kp B         &kp N     &kp M                           &as LESS_THAN COMMA  &as GREATER_THAN DOT  &as QUESTION SLASH  &kp RIGHT_ALT
                  &mor 1 ESCAPE  &kp UP_ARROW     &kp DOWN           &as PIPE BACKSLASH  &mol 2 SPACE  &kp BSPC  &as DOUBLE_QUOTES SINGLE_QUOTE  &kp LEFT             &kp RIGHT             &kp RETURN
            >;
        };

        Nav-Mac {
            bindings = <
&none   &kp LG(Q)  &kp LG(W)       &kp UP_ARROW    &kp LG(R)        &kp LG(T)  &kp LG(Y)  &kp LG(U)  &none            &none          &none     &none
&trans  &kp LG(A)  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp LG(F)  &kp LG(H)  &none      &kp RIGHT_SHIFT  &kp RIGHT_GUI  &none     &trans
&none   &kp LG(Z)  &kp LG(X)       &kp LG(C)       &kp LG(V)        &kp LG(B)  &kp LG(N)  &kp LG(M)  &none            &none          &none     &kp RIGHT_ALT
        &none      &none           &none           &none            &none      &kp END    &none      &none            &none          &kp HOME
            >;
        };

        Fun-Mac {
            bindings = <
&bt BT_CLR_ALL  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2    &bt BT_SEL 3  &bt BT_SEL 4  &kp F10     &kp F7  &kp F8  &kp F9  &none  &none
&trans          &none         &kp LEFT_GUI  &kp LEFT_SHIFT  &none         &out OUT_BLE  &kp F11     &kp F4  &kp F5  &kp F6  &none  &trans
&kp LEFT_ALT    &none         &none         &none           &none         &out OUT_USB  &kp F12     &kp F1  &kp F2  &kp F3  &none  &to 3
                &none         &none         &none           &none         &none         &kp DELETE  &none   &none   &none   &none
            >;
        };

        Qwer-Win {
            bindings = <
&kp TAB           &kp Q          &kp W            &kp E              &kp R               &kp T         &kp Y     &kp U                           &kp I                &kp O                 &kp P               &none
&kp LEFT_CONTROL  &kp A          &hml LEFT_ALT S  &hml LEFT_SHIFT D  &kp F               &kp G         &kp H     &kp J                           &hmr RIGHT_SHIFT K   &hmr RIGHT_ALT L      &as COLON SEMI      &kp RIGHT_CONTROL
&kp CAPSLOCK      &kp Z          &kp X            &kp C              &kp V               &kp B         &kp N     &kp M                           &as LESS_THAN COMMA  &as GREATER_THAN DOT  &as QUESTION SLASH  &kp RIGHT_GUI
                  &mor 4 ESCAPE  &kp UP_ARROW     &kp DOWN           &as PIPE BACKSLASH  &mol 5 SPACE  &kp BSPC  &as DOUBLE_QUOTES SINGLE_QUOTE  &kp LEFT             &kp RIGHT             &kp RETURN
            >;
        };

        Nav-Win {
            bindings = <
&none   &kp LC(Q)  &kp LC(W)       &kp UP_ARROW    &kp LC(R)        &kp LC(T)  &kp LC(Y)  &kp LC(U)  &none            &none          &none     &none
&trans  &kp LC(A)  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp LC(F)  &kp LC(H)  &none      &kp RIGHT_SHIFT  &kp RIGHT_ALT  &none     &trans
&none   &kp LC(Z)  &kp LC(X)       &kp LC(C)       &kp LC(V)        &kp LC(B)  &kp LC(N)  &kp LC(M)  &none            &none          &none     &kp RIGHT_GUI
        &none      &none           &none           &none            &none      &kp END    &none      &none            &none          &kp HOME
            >;
        };

        Fun-Win {
            bindings = <
&bt BT_CLR_ALL  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2    &bt BT_SEL 3  &bt BT_SEL 4  &kp F10     &kp F7  &kp F8  &kp F9  &none  &none
&trans          &none         &kp LEFT_ALT  &kp LEFT_SHIFT  &none         &out OUT_BLE  &kp F11     &kp F4  &kp F5  &kp F6  &none  &trans
&kp LEFT_GUI    &none         &none         &none           &none         &out OUT_USB  &kp F12     &kp F1  &kp F2  &kp F3  &none  &to 0
                &none         &none         &none           &none         &none         &kp DELETE  &none   &none   &none   &none
            >;
        };
    };
};
